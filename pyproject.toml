[tool.poetry]
name = "flask-configurer"
version = "0.1.0"
description = ""
authors = ["jacksontoomey <jacksontoomey@gmail.com>"]
packages = [
    { include = "flask_configurer", from  = "src" }
]

[tool.poetry.dependencies]
python = "^3.9"
Inject = "^4.3.1"
Flask = "^2.0.1"
celery = "^5.1.1"

[tool.poetry.dev-dependencies]
pytest = "^6.2.4"
pytest-flask = "^1.2.0"
pytest-cov = "^2.12.1"
pre-commit = "^2.13.0"
black = "^21.6b0"
isort = "^5.9.1"
flake8 = "^3.9.2"
mypy = "^0.910"
celery-types = "^0.4.0"

[tool.black]
line-length = 131
target-version = ['py39']

[tool.isort]
force_single_line = true
force_sort_within_sections = true
line_length = 131
lines_after_imports = 2

[tool.pytest.ini_options]
testpaths = "tests"
addopts = "--cov=flask_configurer --cov-report term-missing --cov-fail-under=100"

[tool.coverage.run]
omit = []

[tool.mypy]
python_version = "3.9"
files = ["src", "tests"]
ignore_missing_imports = true
warn_redundant_casts = true

[[tool.mypy.overrides]]
module = 'flask_configurer.*'
disallow_any_unimported = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_unused_ignores = true
warn_no_return = true
warn_return_any = true
warn_unreachable = true
strict_equality = true
implicit_reexport = false

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
